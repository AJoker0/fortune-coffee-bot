# bot.py
from aiogram import Bot, Dispatcher, types, executor
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton
import random
from predictions import predictions
from keyboard import drink_kb
from tasks import get_random_task


API_TOKEN = '7925334331:AAFjfKpuKvGT8fCFOgjPGfW7pt_gjjvb5lQ'

bot = Bot(token=API_TOKEN)
dp = Dispatcher(bot)

@dp.message_handler(commands=['start'])

async def send_welcome(message: types.Message):
    await message.reply("üç™ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –Ω–∞—à—É —É—é—Ç–Ω—É—é –∫–æ—Ñ–µ–π–Ω—é!\n\n–ß—Ç–æ –±—É–¥–µ—Ç–µ –ø–∏—Ç—å —Å–µ–≥–æ–¥–Ω—è?", reply_markup=drink_kb)

@dp.message_handler(lambda message: message.text in ["‚òï –õ–∞—Ç—Ç–µ", "üçµ –ú–∞—Ç—á–∞", "üßã –§—Ä–∞–ø–ø–µ"])
async def serve_fortune(message: types.Message):
    phrase = random.choice(predictions)
    await message.reply(f"–û—Ç–ª–∏—á–Ω—ã–π –≤—ã–±–æ—Ä! {message.text} —É–∂–µ –≥–æ—Ç–æ–≤.\n\n–í–æ—Ç —Ç–≤–æ—è –ø–µ—á–µ–Ω—å–∫–∞ –¥–Ω—è: \U0001F960\n\n\"{phrase}\"", reply_markup=drink_kb)


@dp.message_handler(lambda message: message.text == "üìù –ó–∞–¥–∞–Ω–∏–µ –¥–Ω—è")
async def send_task(message: types.Message):
    task = get_random_task()
    await message.reply(f"üåç –¢–≤–æ–µ –¥–æ–±—Ä–æ–µ –¥–µ–ª–æ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è:\n\nüìù {task}")



if __name__ == '__main__':
    executor.start_polling(dp, skip_updates=True)


